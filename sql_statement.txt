create table if not exists photoblog_users (
     username varchar(255) not null,
     user_password varchar(255) not null,
     primary key (username)
);

create table if not exists photoblog_user_role (
     user_role_id integer generated by default as identity,
     user_role varchar(255) not null,
     username varchar(255) not null,
     primary key (user_role_id),
     foreign key (username) references photoblog_users
);

create table if not exists photo (
    photo_id uuid default random_uuid() not null,
    photo_data blob,
    photo_description varchar(255),
    photo_file_type varchar(255),
    photo_title varchar(255),
    photo_uploaded_datetime timestamp(6),
    username varchar(255),
    primary key (photo_id),
    foreign key (username) references photoblog_users
);

create table if not exists comments (
    comment_id bigint not null,
    comment_datetime timestamp(6),
    comment_text varchar(255),
    photo_id uuid,
    username varchar(255),
    primary key (comment_id),
    foreign key (username) references photoblog_users,
    foreign key (photo_id) references photo
)


select
    p1_0.username,
    p1_0.user_password,
    u1_0.username,
    u1_0.user_role_id,
    u1_0.user_role
from
    photoblog_users p1_0
left join
    photoblog_user_role u1_0
    on p1_0.username=u1_0.username
where
    p1_0.username=?;

insert into
    photoblog_users
    (user_password, username)
values
    (?, ?);

insert into
    photoblog_user_role
    (user_role_id, username, user_role)
values
    (default, ?, ?);


